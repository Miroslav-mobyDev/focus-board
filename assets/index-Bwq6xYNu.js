(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function s(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(n){if(n.ep)return;n.ep=!0;const o=s(n);fetch(n.href,o)}})();const E="focusboard-data";function l(t){localStorage.setItem(E,JSON.stringify(t))}function S(){const t=localStorage.getItem(E);if(!t)return{tasks:[]};try{return JSON.parse(t)}catch{return{tasks:[]}}}const T=["todo","in-progress","done"],v=document.getElementById("board"),a=S(),p=new Map,u=new Map;function B(t){const e=document.createElement("div");e.className="task-card",e.draggable=!0,e.dataset.id=t.id,e.innerHTML=`
    <strong>${t.title}</strong><br>
    Проект: ${t.project}<br>
    План: ${t.plannedMinutes} мин<br>
    Выполнено: <span class="spent">${t.spentMinutes}</span> мин<br>
    Срок: ${t.deadline}<br>
    <button class="start-btn">▶ Старт</button>
    <span class="timer-display" style="margin-left: 10px;"></span>
  `;const s=e.querySelector(".start-btn"),r=e.querySelector(".timer-display"),n=document.createElement("button");n.textContent="➕ Добавить минуты",n.style.marginLeft="10px",t.status==="todo"&&(n.style.display="none"),e.appendChild(n),n.addEventListener("click",()=>{const c=prompt("Сколько минут добавить?"),d=Number(c);!isNaN(d)&&d>0?(t.spentMinutes+=d,o.textContent=t.spentMinutes.toString(),l(a),alert(`Добавлено ${d} минут.`)):alert("Введите корректное число минут.")});const o=e.querySelector(".spent"),i=t.id;if(t.status==="done")return r.textContent=`✅ Выполнено за ${t.spentMinutes} мин`,s.remove(),e;if(t.startTime){const c=Math.floor((Date.now()-t.startTime)/1e3);u.set(i,c),r.textContent=`⏱ ${c} сек`,o.textContent=t.spentMinutes.toString(),y(t,o,r)}return s.addEventListener("click",()=>{if(!p.has(i)){if(t.status!=="in-progress"){t.status="in-progress",l(a),m();return}y(t,o,r)}}),e}function y(t,e,s){const r=t.id;let n=u.get(r)??0;t.startTime||(t.startTime=Date.now()),s.textContent=`⏱ ${n} сек`;const o=window.setInterval(()=>{n++,u.set(r,n),s.textContent=`⏱ ${n} сек`,n%60===0&&(t.spentMinutes+=1,e.textContent=t.spentMinutes.toString()),l(a)},1e3);p.set(r,o),l(a)}function m(){v.innerHTML="",T.forEach(t=>{const e=document.createElement("div");e.className="kanban-column",e.dataset.status=t,e.innerHTML=`<h3>${N(t)}</h3>`;const s=document.createElement("div");s.className="kanban-tasks",e.addEventListener("dragover",r=>{r.preventDefault(),e.classList.add("drag-over")}),e.addEventListener("dragleave",()=>{e.classList.remove("drag-over")}),e.addEventListener("drop",r=>{e.classList.remove("drag-over"),x(r,t)}),a.tasks.filter(r=>r.status===t).forEach(r=>{const n=B(r);n.addEventListener("dragstart",w),s.appendChild(n)}),e.appendChild(s),v.appendChild(e)})}function w(t){const e=t.target;e?.dataset?.id&&t.dataTransfer?.setData("text/plain",e.dataset.id)}function x(t,e){t.preventDefault();const s=t.dataTransfer?.getData("text/plain");if(!s)return;const r=a.tasks.find(n=>n.id===s);if(r){if(r.status=e,e==="done"){const n=p.get(s);if(n!==void 0){clearInterval(n),p.delete(s);const o=u.get(s)??0;r.spentMinutes+=Math.floor(o/60),u.delete(s)}if(r.startTime){const o=Math.floor((Date.now()-r.startTime)/1e3);r.spentMinutes+=Math.floor(o/60),r.startTime=void 0}}l(a),m()}}function N(t){switch(t){case"todo":return"Запланировано";case"in-progress":return"В процессе";case"done":return"Готово"}}const h=document.getElementById("task-form");h?.addEventListener("submit",t=>{t.preventDefault();const e=document.getElementById("task-title"),s=document.getElementById("task-project"),r=document.getElementById("task-minutes"),n=document.getElementById("task-deadline"),o=e.value.trim(),i=s.value.trim(),c=parseInt(r.value),d=n.value,I=new Date,L=new Date(d);if(!o||!i||!d||isNaN(c)){alert("Пожалуйста, заполните все поля.");return}if(c<=0){alert("Количество минут должно быть больше 0.");return}if(L<I){alert("Дата дедлайна не может быть в прошлом.");return}const M={id:Date.now().toString(),title:o,project:i,plannedMinutes:c,spentMinutes:0,deadline:d,status:"todo"};a.tasks.push(M),l(a),m(),h.reset()});a.tasks.length===0&&(a.tasks.push({id:"1",title:"Написать Kanban",project:"FocusBoard",plannedMinutes:90,spentMinutes:0,deadline:new Date().toISOString().split("T")[0],status:"todo"}),l(a));m();const D=document.getElementById("theme-toggle"),f=document.documentElement,b=localStorage.getItem("theme");b&&f.setAttribute("data-theme",b);D.addEventListener("click",()=>{const e=f.getAttribute("data-theme")==="dark"?"light":"dark";f.setAttribute("data-theme",e),localStorage.setItem("theme",e)});const O=document.getElementById("export-btn"),C=document.getElementById("import-btn"),g=document.getElementById("import-input");O.addEventListener("click",()=>{const t=JSON.stringify(a,null,2),e=new Blob([t],{type:"application/json"}),s=URL.createObjectURL(e),r=document.createElement("a");r.href=s,r.download="focus-board.json",r.click(),URL.revokeObjectURL(s)});C.addEventListener("click",()=>{g.click()});g.addEventListener("change",()=>{const t=g.files?.[0];if(!t)return;const e=new FileReader;e.onload=()=>{try{const s=JSON.parse(e.result);s&&Array.isArray(s.tasks)?(localStorage.setItem("focusBoard",JSON.stringify(s)),window.location.reload()):alert("Неверный формат файла.")}catch(s){alert("Ошибка при импорте: "+s)}},e.readAsText(t)});
